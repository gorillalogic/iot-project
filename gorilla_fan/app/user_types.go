// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=gorilla_fan/design
// --out=$(GOPATH)/src/gorilla_fan
// --version=v1.1.0-dirty
//
// API "gorilla_fan": Application User Types
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

// fanPayload user type.
type fanPayload struct {
	// Status of the Fan
	Status *bool `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// Publicize creates FanPayload from fanPayload
func (ut *fanPayload) Publicize() *FanPayload {
	var pub FanPayload
	if ut.Status != nil {
		pub.Status = ut.Status
	}
	return &pub
}

// FanPayload user type.
type FanPayload struct {
	// Status of the Fan
	Status *bool `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// thermoPayload user type.
type thermoPayload struct {
	// Maximum Temperature
	Maxtemp *float64 `form:"maxtemp,omitempty" json:"maxtemp,omitempty" xml:"maxtemp,omitempty"`
	// Minimum Temperature
	Mintemp *float64 `form:"mintemp,omitempty" json:"mintemp,omitempty" xml:"mintemp,omitempty"`
}

// Publicize creates ThermoPayload from thermoPayload
func (ut *thermoPayload) Publicize() *ThermoPayload {
	var pub ThermoPayload
	if ut.Maxtemp != nil {
		pub.Maxtemp = ut.Maxtemp
	}
	if ut.Mintemp != nil {
		pub.Mintemp = ut.Mintemp
	}
	return &pub
}

// ThermoPayload user type.
type ThermoPayload struct {
	// Maximum Temperature
	Maxtemp *float64 `form:"maxtemp,omitempty" json:"maxtemp,omitempty" xml:"maxtemp,omitempty"`
	// Minimum Temperature
	Mintemp *float64 `form:"mintemp,omitempty" json:"mintemp,omitempty" xml:"mintemp,omitempty"`
}
