// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=gorilla_fan/design
// --out=$(GOPATH)/src/gorilla_fan
// --version=v1.1.0-dirty
//
// API "gorilla_fan": Application Media Types
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

import (
	"github.com/goadesign/goa"
)

// A Fan (default view)
//
// Identifier: application/vnd.gorilla.fan+json; view=default
type GorillaFan struct {
	// API href for making requests on the fan
	Href string `form:"href" json:"href" xml:"href"`
	// Unique Fan ID
	ID int `form:"id" json:"id" xml:"id"`
	// Current Status of Fan
	Status bool `form:"status" json:"status" xml:"status"`
}

// Validate validates the GorillaFan media type instance.
func (mt *GorillaFan) Validate() (err error) {

	if mt.Href == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "href"))
	}

	return
}

// GorillaFanCollection is the media type for an array of GorillaFan (default view)
//
// Identifier: application/vnd.gorilla.fan+json; type=collection; view=default
type GorillaFanCollection []*GorillaFan

// Validate validates the GorillaFanCollection media type instance.
func (mt GorillaFanCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// A Fan (default view)
//
// Identifier: application/vnd.gorilla.thermo+json; view=default
type GorillaThermo struct {
	// API href for making requests on the Thermo
	Href string `form:"href" json:"href" xml:"href"`
	// Unique Thermometer ID
	ID int `form:"id" json:"id" xml:"id"`
	// Current Temperature of Thermo
	Temperature float64 `form:"temperature" json:"temperature" xml:"temperature"`
}

// Validate validates the GorillaThermo media type instance.
func (mt *GorillaThermo) Validate() (err error) {

	if mt.Href == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "href"))
	}

	return
}

// GorillaThermoCollection is the media type for an array of GorillaThermo (default view)
//
// Identifier: application/vnd.gorilla.thermo+json; type=collection; view=default
type GorillaThermoCollection []*GorillaThermo

// Validate validates the GorillaThermoCollection media type instance.
func (mt GorillaThermoCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}
